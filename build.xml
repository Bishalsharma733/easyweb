<project xmlns:ivy="antlib:org.apache.ivy.ant" name="easyweb" default="deploy.functional.tests">
    <property file="local.properties" />
    <property name="appName" value="easyweb" />

	<property name="build.dir" value="build" />
    <property name="dist.dir" value="dist" />
    <property name="build.main" value="${build.dir}/main" />
    <property name="build.test" value="${build.dir}/test" />
    <property name="build.functional.test" value="${build.dir}/functionaltest" />
    <property name="src.dir" value="src/main/java" />
    <property name="test.dir" value="src/test/java" />
    <property name="functional.test.dir" value="src/functional-tests/java" />
    <property name="reports.dir" value="reports" />
    <property name="reports.tests" value="reports/tests" />
	<property name="app.servers" value="appservers" />
	
	<property name="cargo.refid" value="cargoref01"/>
	<property name="cargo.log.dir" value="tmp/cargolog"/>
	<property name="cargo.config.dir" value="tmp/cargoconfig"/>
	<property name="cargo.container.id" value="tomcat5x" />
	<property name="cargo.container.installer.url" 
	  value="http://www.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip"/>

    
	<target name="resolve">
        <ivy:retrieve/>
        <ivy:cachepath conf="main" pathid="lib.path.id" />
        <ivy:cachepath conf="test" pathid="test.lib.path.id" />
        <ivy:cachepath conf="functional-test" pathid="functional.test.lib.path.id" />
        <ivy:cachepath conf="cargo" pathid="cargo.lib.path.id" />
    </target>

	<target name="init">
	    <mkdir dir="${build.dir}" />
	    <mkdir dir="${build.main}" />
	    <mkdir dir="${build.test}" />
	    <mkdir dir="${build.functional.test}" />
	    <mkdir dir="${dist.dir}" />
	    <mkdir dir="${dist.dir}/jars" />
	    <mkdir dir="${reports.dir}" />
	    <mkdir dir="${reports.tests}" />
	    <mkdir dir="${app.servers}/tomcat" />
	</target>

	<target name="compile" depends="init,resolve">
		<javac srcdir="${src.dir}" destdir="${build.main}" classpathref="lib.path.id" />
	</target>

	<target name="test" depends="init,compile">
    	<javac srcdir="${test.dir}" destdir="${build.test}" >
			<classpath>
				<pathelement location="${build.main}"/>
				<pathelement location="${build.test}"/>
				<path refid="test.lib.path.id"/>
				</classpath>
			</javac>
				        	
    	<junit fork="yes" forkmode="once" failureproperty="JunitFailed" printsummary="yes">
			<classpath>
				<pathelement location="${build.main}"/>
				<pathelement location="${build.test}"/>
				<path refid="test.lib.path.id"/>
				</classpath>
				<formatter type="xml"/>
				<formatter type="plain"/>
				  <batchtest  todir="${reports.tests}">
				<fileset dir="${test.dir}">
  					<include name="**/*Test*.java"/>
				</fileset>
				</batchtest>
		</junit>
    	<fail if="JunitFailed" message="JUnit failures" />
	</target>

	<target name="dist" depends="init, test">
			<jar destfile="${dist.dir}/jars/${appName}.jar"
       			basedir="${build.main}"
			  />
        	
			<war destfile="${dist.dir}/${appName}.war"
						webxml="src/main/webapp/WEB-INF/web.xml"> 
				<fileset dir="src/main/webapp/"/>
  				<lib dir="lib">
  				</lib>
  				<lib dir="${dist.dir}/jars/">
  				</lib>
			</war>
		
	</target>
		
	<target name="deploy.functional.tests" depends="init, dist, cargo.start, functional.tests, cargo.stop">
	</target>
		
	<target name="cargo.init" depends="init">
		<taskdef resource="cargo.tasks">
		  <classpath>
		  	<!--
			<pathelement location="cargolib/cargo-ant-0.9.jar"/>
			<pathelement location="cargolib/cargo-core-uberjar-0.9.jar"/>
			-->
			<path refid="cargo.lib.path.id"/>
		  </classpath>
		</taskdef>
	</target>
		

	<target name="cargo.start" depends="init, cargo.init">
		
		<delete dir="${cargo.config.dir}" />
		<mkdir dir="${cargo.log.dir}"/>
		<mkdir dir="${cargo.config.dir}"/>

		<echo message="Starting Cargo..."/>
		<echo message="Using war = ${dist.dir}/${appName}.war "/>		
		<cargo  containerId="${cargo.container.id}" 
		  		
			    wait="false"
		  		output="${cargo.log.dir}/output.log" 
		      	log="${cargo.log.dir}/cargo.log" 
		  		action="start" 
		  		id="${cargo.refid}">
			<zipurlinstaller installurl="${cargo.container.installer.url}"
				installdir="${app.servers}/tomcat"
			/>
		    <configuration home="${cargo.config.dir}"> 
		      <property name="cargo.servlet.port" value="8080"/>
		      <property name="cargo.logging" value="high"/>
		      <deployable type="war" file="${dist.dir}/${appName}.war"/>
		    </configuration>
		  </cargo>
		</target>
		<target name="functional.tests" depends="init, cargo.init">
		
	   		<javac srcdir="${functional.test.dir}" destdir="${build.functional.test}" >
				<classpath>
					<pathelement location="${build.main}"/>
					<pathelement location="${build.test}"/>
					<pathelement location="${build.functional.test}"/>
					<path refid="functional.test.lib.path.id"/>
					</classpath>
				</javac>
					        	
	    	<junit fork="yes" forkmode="once" failureproperty="JunitFailed" printsummary="yes">
				<classpath>
					<pathelement location="${build.main}"/>
					<pathelement location="${build.test}"/>
					<pathelement location="${build.functional.test}"/>
					<path refid="functional.test.lib.path.id"/>
					</classpath>
					<formatter type="xml"/>
					<formatter type="plain"/>
					  <batchtest  todir="${reports.tests}">
					<fileset dir="${functional.test.dir}">
	  					<include name="**/*Test*.java"/>
					</fileset>
					</batchtest>
			</junit>
	    	<fail if="JunitFailed" message="JUnit failures" />
	    </target>
	<target name="cargo.stop" depends="init, cargo.init">

		 <cargo containerId="${cargo.container.id}" action="stop" 
		       refid="${cargo.refid}"/>	
    </target>
    
    <target name="clean" >
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${reports.dir}" />
        <delete dir="${cargo.log.dir}" /> 
    	<delete dir="${cargo.config.dir}"/>
    	<delete dir="tmp"/>
    </target>
	<target name="clobber" depends="clean">
        <delete dir="lib" /> 
		<delete dir="${app.servers}" />
	</target>
</project>
